[gd_scene load_steps=35 format=4 uid="uid://b1yleqbb8tc7x"]

[ext_resource type="PackedScene" uid="uid://btv0a42cgxt8g" path="res://levels/WE_test.tscn" id="1_db21n"]
[ext_resource type="Material" uid="uid://cn1gsy15bkaff" path="res://materials/grid.tres" id="2_x5xie"]
[ext_resource type="Texture2D" uid="uid://ivvpsi314b34" path="res://textures/grid.jpg" id="3_yfwkt"]
[ext_resource type="PackedScene" uid="uid://c3ffql15mo0aj" path="res://controllers/fps_controller.tscn" id="4_liofc"]
[ext_resource type="Script" path="res://addons/func_godot/src/map/func_godot_map.gd" id="5_1wico"]
[ext_resource type="Resource" uid="uid://bkhxcqsquw1yg" path="res://addons/func_godot/func_godot_default_map_settings.tres" id="6_q5elh"]
[ext_resource type="Texture2D" uid="uid://cyg2snr1w5xw5" path="res://addons/func_godot/textures/default_texture.png" id="7_0pxde"]

[sub_resource type="BoxMesh" id="BoxMesh_gd0ev"]
lightmap_size_hint = Vector2i(204, 111)
material = ExtResource("2_x5xie")
size = Vector3(20, 0.5, 20)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_oahyi"]
data = PackedVector3Array(-10, 0.25, 10, 10, 0.25, 10, -10, -0.25, 10, 10, 0.25, 10, 10, -0.25, 10, -10, -0.25, 10, 10, 0.25, -10, -10, 0.25, -10, 10, -0.25, -10, -10, 0.25, -10, -10, -0.25, -10, 10, -0.25, -10, 10, 0.25, 10, 10, 0.25, -10, 10, -0.25, 10, 10, 0.25, -10, 10, -0.25, -10, 10, -0.25, 10, -10, 0.25, -10, -10, 0.25, 10, -10, -0.25, -10, -10, 0.25, 10, -10, -0.25, 10, -10, -0.25, -10, 10, 0.25, 10, -10, 0.25, 10, 10, 0.25, -10, -10, 0.25, 10, -10, 0.25, -10, 10, 0.25, -10, -10, -0.25, 10, 10, -0.25, 10, -10, -0.25, -10, 10, -0.25, 10, 10, -0.25, -10, -10, -0.25, -10)

[sub_resource type="Shader" id="Shader_y046h"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.dev4's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = (albedo.rgb * albedo_tex.r) + albedo_tex.g + albedo_tex.b;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = (1.0 - albedo_tex.g) * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_svtxk"]
load_path = "res://.godot/imported/grid.jpg-98e91c7ac35e7c2efc8df0a4f602d545.bptc.ctex"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_gu7hf"]
load_path = "res://.godot/imported/grid.jpg-98e91c7ac35e7c2efc8df0a4f602d545.bptc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e7e42"]
render_priority = 0
shader = SubResource("Shader_y046h")
shader_parameter/albedo = Color(0.770566, 0.0165473, 0.293926, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("CompressedTexture2D_svtxk")
shader_parameter/texture_roughness = SubResource("CompressedTexture2D_gu7hf")

[sub_resource type="BoxMesh" id="BoxMesh_kat8l"]
material = SubResource("ShaderMaterial_e7e42")

[sub_resource type="BoxShape3D" id="BoxShape3D_2o4n6"]

[sub_resource type="Shader" id="Shader_cwof1"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.dev4's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = (albedo.rgb * albedo_tex.r) + albedo_tex.g + albedo_tex.b;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = (1.0 - albedo_tex.g) * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0racc"]
render_priority = 0
shader = SubResource("Shader_cwof1")
shader_parameter/albedo = Color(0.937255, 1, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("3_yfwkt")
shader_parameter/texture_roughness = ExtResource("3_yfwkt")

[sub_resource type="BoxMesh" id="BoxMesh_xc4gq"]
material = SubResource("ShaderMaterial_0racc")
size = Vector3(2, 2, 2)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_vp4dy"]
data = PackedVector3Array(-1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, -1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_62u37"]
render_priority = 0
shader = SubResource("Shader_cwof1")
shader_parameter/albedo = Color(0, 0.67451, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(1, 0.5, 0.5)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("3_yfwkt")
shader_parameter/texture_roughness = ExtResource("3_yfwkt")

[sub_resource type="PrismMesh" id="PrismMesh_rutao"]
material = SubResource("ShaderMaterial_62u37")
left_to_right = 0.0
size = Vector3(8, 2, 2)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_j6kcl"]
data = PackedVector3Array(-4, 1, 1, 4, -1, 1, -4, -1, 1, -4, 1, -1, -4, -1, -1, 4, -1, -1, -4, 1, 1, -4, 1, -1, 4, -1, 1, -4, 1, -1, 4, -1, -1, 4, -1, 1, -4, 1, -1, -4, 1, 1, -4, -1, -1, -4, 1, 1, -4, -1, 1, -4, -1, -1, -4, -1, 1, 4, -1, 1, -4, -1, -1, 4, -1, 1, 4, -1, -1, -4, -1, -1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_y3th0"]
albedo_texture = ExtResource("7_0pxde")
metallic_specular = 0.0
texture_filter = 2

[sub_resource type="ArrayMesh" id="ArrayMesh_vas6h"]
_surfaces = [{
"aabb": AABB(-7.5, 0, -8.5, 14.5, 3.5, 17.5),
"attribute_data": PackedByteArray("AABwQAAAgL4AAHBAAAAAAAAAgD8AAAAAAACAPwAAgL4AAFDAAACAvgAAAEAAAIC+AAAAQAAAAAAAAFDAAAAAAAAAUEAAAIA/AABQQAAAcEAAAADAAABwQAAAAMAAAIA/AABQwAAAgD8AAABAAACAPwAAAEAAAHBAAABQwAAAcEAAAFBAAACAvgAAUEAAAAAAAAAAwAAAAAAAAADAAACAvgAAcMAAAIC+AACAvwAAgL4AAIC/AAAAAAAAcMAAAAAAAABwQAAAgL4AAHBAAAAAAAAAgL8AAAAAAACAvwAAgL4AAABAAACAvgAAiEAAAIC+AACIQAAAAAAAAABAAAAAAAAAAMAAAIC/AAAAwAAAcEAAAIjAAABwQAAAiMAAAIC/AAAAQAAAgL8AAIhAAACAvwAAiEAAAHBAAAAAQAAAcEAAAADAAACAvgAAAMAAAAAAAACIwAAAAAAAAIjAAACAvgAAcMAAAIC+AACAPwAAgL4AAIA/AAAAAAAAcMAAAAAAAACAPwAAgL4AAIA/AAAAAAAAYMAAAAAAAABgwAAAgL4AAIjAAACAvgAAEEAAAIC+AAAQQAAAAAAAAIjAAAAAAAAAiEAAAGDAAACIQAAAgD8AABDAAACAPwAAEMAAAGDAAACIwAAAYMAAABBAAABgwAAAEEAAAIA/AACIwAAAgD8AAIhAAACAvgAAiEAAAAAAAAAQwAAAAAAAABDAAACAvgAAgL8AAIC+AABgQAAAgL4AAGBAAAAAAAAAgL8AAAAAAACAPwAA4L8AAIA/AACAvgAAQD8AAIC+AABAPwAA4L8AAIjAAADgvwAAoD8AAOC/AACgPwAAgL4AAIjAAACAvgAAiEAAAEA/AACIQAAAgD8AAKC/AACAPwAAoL8AAEA/AACIwAAAQD8AAKA/AABAPwAAoD8AAIA/AACIwAAAgD8AAIhAAADgvwAAiEAAAIC+AACgvwAAgL4AAKC/AADgvwAAgL8AAOC/AABAvwAA4L8AAEC/AACAvgAAgL8AAIC+AABAPwAA4L8AAEA/AACAvgAAYMAAAIC+AABgwAAA4L8AAIjAAADgvwAAgMAAAOC/AACAwAAAgL4AAIjAAACAvgAAiEAAAGDAAACIQAAAQD8AAIBAAABAPwAAgEAAAGDAAACIwAAAYMAAAIDAAABgwAAAgMAAAEA/AACIwAAAQD8AAIhAAADgvwAAiEAAAIC+AACAQAAAgL4AAIBAAADgvwAAQL8AAOC/AABgQAAA4L8AAGBAAACAvgAAQL8AAIC+AABQwAAA4L8AAFDAAACAvgAAYMAAAIC+AABgwAAA4L8AAIDAAADgvwAAEEAAAOC/AAAQQAAAgL4AAIDAAACAvgAAgEAAAGDAAACAQAAAUMAAABDAAABQwAAAEMAAAGDAAACAwAAAYMAAABBAAABgwAAAEEAAAFDAAACAwAAAUMAAAIBAAADgvwAAgEAAAIC+AAAQwAAAgL4AABDAAADgvwAAUEAAAOC/AABgQAAA4L8AAGBAAACAvgAAUEAAAIC+AACAPwAA4L8AAIA/AACAvgAAUMAAAIC+AABQwAAA4L8AAOA/AADgvwAAAEAAAOC/AAAAQAAAgL4AAOA/AACAvgAA4L8AAFDAAADgvwAAgD8AAADAAACAPwAAAMAAAFDAAADgPwAAUMAAAABAAABQwAAAAEAAAIA/AADgPwAAgD8AAOC/AADgvwAA4L8AAIC+AAAAwAAAgL4AAADAAADgvwAAgL8AAOC/AABQQAAA4L8AAFBAAACAvgAAgL8AAIC+AAAAvwAAwL8AAAC/AACAvgAAQL8AAIC+AABAvwAAwL8AADDAAADAvwAAQD8AAMC/AABAPwAAgL4AADDAAACAvgAAMEAAAEC/AAAwQAAAAL8AAEC/AAAAvwAAQL8AAEC/AAAwwAAAQL8AAEA/AABAvwAAQD8AAAC/AAAwwAAAAL8AADBAAADAvwAAMEAAAIC+AABAvwAAgL4AAEC/AADAvwAAAD8AAMC/AABAPwAAwL8AAEA/AACAvgAAAD8AAIC+//8/PwAA4L8AAEA/AACAvgAAAL8AAIC+AAAAvwAA4L/NzEzAAADgvwMAAL8AAIC+zcxMwAAAgL7NzExAAAAAv83MTEAAAEA/AwAAPwAAQD8DAAA/AAAAv83MTEAAAOC/zcxMQAAAgL4DAAA/AACAvl9racAAAAC/K/kOvwAAAL8r+Q6/AABAP19racD//z8/"),
"format": 34359742487,
"index_count": 312,
"index_data": PackedByteArray("AAABAAIAAAACAAMABAAFAAYABAAGAAcACAAJAAoACAAKAAsADAANAA4ADAAOAA8AEAARABIAEAASABMAFAAVABYAFAAWABcAGAAZABoAGAAaABsAHAAdAB4AHAAeAB8AIAAhACIAIAAiACMAJAAlACYAJAAmACcAKAApACoAKAAqACsALAAtAC4ALAAuAC8AMAAxADIAMAAyADMANAA1ADYANAA2ADcAOAA5ADoAOAA6ADsAPAA9AD4APAA+AD8AQABBAEIAQABCAEMARABFAEYARABGAEcASABJAEoASABKAEsATABNAE4ATABOAE8AUABRAFIAUABSAFMAVABVAFYAVABWAFcAWABZAFoAWABaAFsAXABdAF4AXABeAF8AYABhAGIAYABiAGMAZABlAGYAZABmAGcAaABpAGoAaABqAGsAbABtAG4AbABuAG8AcABxAHIAcAByAHMAdAB1AHYAdAB2AHcAeAB5AHoAeAB6AHsAfAB9AH4AfAB+AH8AgACBAIIAgACCAIMAhACFAIYAhACGAIcAiACJAIoAiACKAIsAjACNAI4AjACOAI8AkACRAJIAkACSAJMAlACVAJYAlACWAJcAmACZAJoAmACaAJsAnACdAJ4AnACeAJ8AoAChAKIAoACiAKMApAClAKYApACmAKcAqACpAKoAqACqAKsArACtAK4ArACuAK8AsACxALIAsACyALMAtAC1ALYAtAC2ALcAuAC5ALoAuAC6ALsAvAC9AL4AvAC+AL8AwADBAMIAwADCAMMAxADFAMYAxwDIAMkAxwDJAMoAywDMAM0AzgDPANAAzgDQANEA"),
"material": SubResource("StandardMaterial3D_y3th0"),
"name": "__TB_empty",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 210,
"vertex_data": PackedByteArray("AADwwAAAAD8AAMDAAADwwAAAAAAAAMDAAAAAwAAAAAAAAMDAAAAAwAAAAD8AAMDAAADwwAAAAD8AAMDAAADwwAAAAD8AAJBAAADwwAAAAAAAAJBAAADwwAAAAAAAAMDAAAAAwAAAAAAAAMDAAADwwAAAAAAAAMDAAADwwAAAAAAAAJBAAAAAwAAAAAAAAJBAAAAAwAAAAD8AAMDAAAAAwAAAAD8AAJBAAADwwAAAAD8AAJBAAADwwAAAAD8AAMDAAAAAwAAAAD8AAMDAAAAAwAAAAAAAAMDAAAAAwAAAAAAAAJBAAAAAwAAAAD8AAJBAAADwwAAAAD8AAJBAAAAAwAAAAD8AAJBAAAAAwAAAAAAAAJBAAADwwAAAAAAAAJBAAADwwAAAAD8AAJBAAADwwAAAAAAAAJBAAAAAQAAAAAAAAJBAAAAAQAAAAD8AAJBAAADwwAAAAD8AAJBAAADwwAAAAD8AABBBAADwwAAAAAAAABBBAADwwAAAAAAAAJBAAAAAQAAAAAAAAJBAAADwwAAAAAAAAJBAAADwwAAAAAAAABBBAAAAQAAAAAAAABBBAAAAQAAAAD8AAJBAAAAAQAAAAD8AABBBAADwwAAAAD8AABBBAADwwAAAAD8AAJBAAAAAQAAAAD8AAJBAAAAAQAAAAAAAAJBAAAAAQAAAAAAAABBBAAAAQAAAAD8AABBBAADwwAAAAD8AABBBAAAAQAAAAD8AABBBAAAAQAAAAAAAABBBAADwwAAAAAAAABBBAAAAwAAAAD8AAAjBAAAAwAAAAAAAAAjBAADgQAAAAAAAAAjBAADgQAAAAD8AAAjBAAAAwAAAAD8AAAjBAAAAwAAAAD8AAJBAAAAAwAAAAAAAAJBAAAAAwAAAAAAAAAjBAADgQAAAAAAAAAjBAAAAwAAAAAAAAAjBAAAAwAAAAAAAAJBAAADgQAAAAAAAAJBAAADgQAAAAD8AAAjBAADgQAAAAD8AAJBAAAAAwAAAAD8AAJBAAAAAwAAAAD8AAAjBAADgQAAAAD8AAAjBAADgQAAAAAAAAAjBAADgQAAAAAAAAJBAAADgQAAAAD8AAJBAAAAAwAAAAD8AAJBAAADgQAAAAD8AAJBAAADgQAAAAAAAAJBAAAAAwAAAAAAAAJBAAAAAwAAAYEAAAAjBAAAAwAAAAD8AAAjBAADAvwAAAD8AAAjBAADAvwAAYEAAAAjBAAAAwAAAYEAAAAjBAAAAwAAAYEAAACBAAAAAwAAAAD8AACBAAAAAwAAAAD8AAAjBAADAvwAAAD8AAAjBAAAAwAAAAD8AAAjBAAAAwAAAAD8AACBAAADAvwAAAD8AACBAAADAvwAAYEAAAAjBAADAvwAAYEAAACBAAAAAwAAAYEAAACBAAAAAwAAAYEAAAAjBAADAvwAAYEAAAAjBAADAvwAAAD8AAAjBAADAvwAAAD8AACBAAADAvwAAYEAAACBAAAAAwAAAYEAAACBAAADAvwAAYEAAACBAAADAvwAAAD8AACBAAAAAwAAAAD8AACBAAADAvwAAYEAAAAjBAADAvwAAAD8AAAjBAADgQAAAAD8AAAjBAADgQAAAYEAAAAjBAADAvwAAYEAAAAjBAADAvwAAYEAAAADBAADAvwAAAD8AAADBAADAvwAAAD8AAAjBAADgQAAAAD8AAAjBAADAvwAAAD8AAAjBAADAvwAAAD8AAADBAADgQAAAAD8AAADBAADgQAAAYEAAAAjBAADgQAAAYEAAAADBAADAvwAAYEAAAADBAADAvwAAYEAAAAjBAADgQAAAYEAAAAjBAADgQAAAAD8AAAjBAADgQAAAAD8AAADBAADgQAAAYEAAAADBAADAvwAAYEAAAADBAADgQAAAYEAAAADBAADgQAAAAD8AAADBAADAvwAAAD8AAADBAADQQAAAYEAAAADBAADQQAAAAD8AAADBAADgQAAAAD8AAADBAADgQAAAYEAAAADBAADQQAAAYEAAAADBAADQQAAAYEAAAJBAAADQQAAAAD8AAJBAAADQQAAAAD8AAADBAADgQAAAAD8AAADBAADQQAAAAD8AAADBAADQQAAAAD8AAJBAAADgQAAAAD8AAJBAAADgQAAAYEAAAADBAADgQAAAYEAAAJBAAADQQAAAYEAAAJBAAADQQAAAYEAAAADBAADgQAAAYEAAAADBAADgQAAAAD8AAADBAADgQAAAAD8AAJBAAADgQAAAYEAAAJBAAADQQAAAYEAAAJBAAADgQAAAYEAAAJBAAADgQAAAAD8AAJBAAADQQAAAAD8AAJBAAAAAwAAAYEAAAIBAAAAAwAAAAD8AAIBAAADQQAAAAD8AAIBAAADQQAAAYEAAAIBAAAAAwAAAYEAAAIBAAAAAwAAAYEAAAJBAAAAAwAAAAD8AAJBAAAAAwAAAAD8AAIBAAADQQAAAAD8AAIBAAAAAwAAAAD8AAIBAAAAAwAAAAD8AAJBAAADQQAAAAD8AAJBAAADQQAAAYEAAAIBAAADQQAAAYEAAAJBAAAAAwAAAYEAAAJBAAAAAwAAAYEAAAIBAAADQQAAAYEAAAIBAAADQQAAAAD8AAIBAAADQQAAAAD8AAJBAAADQQAAAYEAAAJBAAAAAwAAAYEAAAJBAAADQQAAAYEAAAJBAAADQQAAAAD8AAJBAAAAAwAAAAD8AAJBAAACAPwAAQEAAALDAAACAPwAAAD8AALDAAADAPwAAAD8AALDAAADAPwAAQEAAALDAAACAPwAAQEAAALDAAACAPwAAQEAAAMA/AACAPwAAAD8AAMA/AACAPwAAAD8AALDAAADAPwAAAD8AALDAAACAPwAAAD8AALDAAACAPwAAAD8AAMA/AADAPwAAAD8AAMA/AADAPwAAQEAAALDAAADAPwAAQEAAAMA/AACAPwAAQEAAAMA/AACAPwAAQEAAALDAAADAPwAAQEAAALDAAADAPwAAAD8AALDAAADAPwAAAD8AAMA/AADAPwAAQEAAAMA/AACAPwAAQEAAAMA/AADAPwAAQEAAAMA/AADAPwAAAD8AAMA/AACAPwAAAD8AAMA///+/vwAAYEDNzMzAAADAvwAAAD/NzMzAAACAPwAAAD/NzMzAAACAPwAAYEDNzMzA//+/vwAAYEDNzMzAAADAvwAAAD8DAIC/AADAvwAAAD/NzMzAAACAPwAAAD/NzMzAAADAvwAAAD/NzMzAAADAvwAAAD8DAIC/AACAPwAAAD8DAIC/AACAPwAAYEDNzMzAAACAPwAAAD/NzMzAAACAPwAAAD8DAIC/AACAPwAAYEDNzMzAAACAPwAAAD8DAIC/AADAvwAAAD8DAIC///+/vwAAYEDNzMzA/////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//78AAP9//3//v/9/AAD//////38AAP//////fwAA//////9/AAD//////3////9//7//f////3//v/9/////f/+//3////9//7////9//////////3//////////f/////////9///////9//3////+//3//f////7//f/9/////v/9//3////+//////wAA/7//////AAD/v/////8AAP+//////wAA/78AAP9//3//vwAA/3//f/+/AAD/f/9//7//fwAA//////9/AAD//////38AAP//////fwAA/////////3//////////f/////////9///////9/SNL/fyOp/39I0v9/I6n/f0jS/38jqf9/SNL/fyOp")
}]

[sub_resource type="ArrayOccluder3D" id="ArrayOccluder3D_pnjjl"]
vertices = PackedVector3Array(-7.5, 0.5, -6, -7.5, 0, -6, -2, 0, -6, -2, 0.5, -6, -7.5, 0.5, -6, -7.5, 0.5, 4.5, -7.5, 0, 4.5, -7.5, 0, -6, -2, 0, -6, -7.5, 0, -6, -7.5, 0, 4.5, -2, 0, 4.5, -2, 0.5, -6, -2, 0.5, 4.5, -7.5, 0.5, 4.5, -7.5, 0.5, -6, -2, 0.5, -6, -2, 0, -6, -2, 0, 4.5, -2, 0.5, 4.5, -7.5, 0.5, 4.5, -2, 0.5, 4.5, -2, 0, 4.5, -7.5, 0, 4.5, -7.5, 0.5, 4.5, -7.5, 0, 4.5, 2, 0, 4.5, 2, 0.5, 4.5, -7.5, 0.5, 4.5, -7.5, 0.5, 9, -7.5, 0, 9, -7.5, 0, 4.5, 2, 0, 4.5, -7.5, 0, 4.5, -7.5, 0, 9, 2, 0, 9, 2, 0.5, 4.5, 2, 0.5, 9, -7.5, 0.5, 9, -7.5, 0.5, 4.5, 2, 0.5, 4.5, 2, 0, 4.5, 2, 0, 9, 2, 0.5, 9, -7.5, 0.5, 9, 2, 0.5, 9, 2, 0, 9, -7.5, 0, 9, -2, 0.5, -8.5, -2, 0, -8.5, 7, 0, -8.5, 7, 0.5, -8.5, -2, 0.5, -8.5, -2, 0.5, 4.5, -2, 0, 4.5, -2, 0, -8.5, 7, 0, -8.5, -2, 0, -8.5, -2, 0, 4.5, 7, 0, 4.5, 7, 0.5, -8.5, 7, 0.5, 4.5, -2, 0.5, 4.5, -2, 0.5, -8.5, 7, 0.5, -8.5, 7, 0, -8.5, 7, 0, 4.5, 7, 0.5, 4.5, -2, 0.5, 4.5, 7, 0.5, 4.5, 7, 0, 4.5, -2, 0, 4.5, -2, 3.5, -8.5, -2, 0.5, -8.5, -1.5, 0.5, -8.5, -1.5, 3.5, -8.5, -2, 3.5, -8.5, -2, 3.5, 2.5, -2, 0.5, 2.5, -2, 0.5, -8.5, -1.5, 0.5, -8.5, -2, 0.5, -8.5, -2, 0.5, 2.5, -1.5, 0.5, 2.5, -1.5, 3.5, -8.5, -1.5, 3.5, 2.5, -2, 3.5, 2.5, -2, 3.5, -8.5, -1.5, 3.5, -8.5, -1.5, 0.5, -8.5, -1.5, 0.5, 2.5, -1.5, 3.5, 2.5, -2, 3.5, 2.5, -1.5, 3.5, 2.5, -1.5, 0.5, 2.5, -2, 0.5, 2.5, -1.5, 3.5, -8.5, -1.5, 0.5, -8.5, 7, 0.5, -8.5, 7, 3.5, -8.5, -1.5, 3.5, -8.5, -1.5, 3.5, -8, -1.5, 0.5, -8, -1.5, 0.5, -8.5, 7, 0.5, -8.5, -1.5, 0.5, -8.5, -1.5, 0.5, -8, 7, 0.5, -8, 7, 3.5, -8.5, 7, 3.5, -8, -1.5, 3.5, -8, -1.5, 3.5, -8.5, 7, 3.5, -8.5, 7, 0.5, -8.5, 7, 0.5, -8, 7, 3.5, -8, -1.5, 3.5, -8, 7, 3.5, -8, 7, 0.5, -8, -1.5, 0.5, -8, 6.5, 3.5, -8, 6.5, 0.5, -8, 7, 0.5, -8, 7, 3.5, -8, 6.5, 3.5, -8, 6.5, 3.5, 4.5, 6.5, 0.5, 4.5, 6.5, 0.5, -8, 7, 0.5, -8, 6.5, 0.5, -8, 6.5, 0.5, 4.5, 7, 0.5, 4.5, 7, 3.5, -8, 7, 3.5, 4.5, 6.5, 3.5, 4.5, 6.5, 3.5, -8, 7, 3.5, -8, 7, 0.5, -8, 7, 0.5, 4.5, 7, 3.5, 4.5, 6.5, 3.5, 4.5, 7, 3.5, 4.5, 7, 0.5, 4.5, 6.5, 0.5, 4.5, -2, 3.5, 4, -2, 0.5, 4, 6.5, 0.5, 4, 6.5, 3.5, 4, -2, 3.5, 4, -2, 3.5, 4.5, -2, 0.5, 4.5, -2, 0.5, 4, 6.5, 0.5, 4, -2, 0.5, 4, -2, 0.5, 4.5, 6.5, 0.5, 4.5, 6.5, 3.5, 4, 6.5, 3.5, 4.5, -2, 3.5, 4.5, -2, 3.5, 4, 6.5, 3.5, 4, 6.5, 0.5, 4, 6.5, 0.5, 4.5, 6.5, 3.5, 4.5, -2, 3.5, 4.5, 6.5, 3.5, 4.5, 6.5, 0.5, 4.5, -2, 0.5, 4.5, 1, 3, -5.5, 1, 0.5, -5.5, 1.5, 0.5, -5.5, 1.5, 3, -5.5, 1, 3, -5.5, 1, 3, 1.5, 1, 0.5, 1.5, 1, 0.5, -5.5, 1.5, 0.5, -5.5, 1, 0.5, -5.5, 1, 0.5, 1.5, 1.5, 0.5, 1.5, 1.5, 3, -5.5, 1.5, 3, 1.5, 1, 3, 1.5, 1, 3, -5.5, 1.5, 3, -5.5, 1.5, 0.5, -5.5, 1.5, 0.5, 1.5, 1.5, 3, 1.5, 1, 3, 1.5, 1.5, 3, 1.5, 1.5, 0.5, 1.5, 1, 0.5, 1.5, -1.5, 3.5, -6.4, -1.5, 0.5, -6.4, 1, 0.5, -6.4, 1, 3.5, -6.4, -1.5, 3.5, -6.4, -1.5, 0.5, -1, -1.5, 0.5, -6.4, 1, 0.5, -6.4, -1.5, 0.5, -6.4, -1.5, 0.5, -1, 1, 0.5, -1, 1, 3.5, -6.4, 1, 0.5, -6.4, 1, 0.5, -1, 1, 3.5, -6.4, 1, 0.5, -1, -1.5, 0.5, -1, -1.5, 3.5, -6.4)
indices = PackedInt32Array

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_furfo"]
points = PackedVector3Array(-7.5, 0.5, -6, -7.5, 0, -6, -2, 0, -6, -2, 0.5, -6, -7.5, 0.5, 4.5, -7.5, 0, 4.5, -2, 0, 4.5, -2, 0.5, 4.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_g3vux"]
points = PackedVector3Array(-7.5, 0.5, 4.5, -7.5, 0, 4.5, 2, 0, 4.5, 2, 0.5, 4.5, -7.5, 0.5, 9, -7.5, 0, 9, 2, 0, 9, 2, 0.5, 9)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_ppwhp"]
points = PackedVector3Array(-2, 0.5, -8.5, -2, 0, -8.5, 7, 0, -8.5, 7, 0.5, -8.5, -2, 0.5, 4.5, -2, 0, 4.5, 7, 0, 4.5, 7, 0.5, 4.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_xvm6x"]
points = PackedVector3Array(-2, 3.5, -8.5, -2, 0.5, -8.5, -1.5, 0.5, -8.5, -1.5, 3.5, -8.5, -2, 3.5, 2.5, -2, 0.5, 2.5, -1.5, 0.5, 2.5, -1.5, 3.5, 2.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_84und"]
points = PackedVector3Array(-1.5, 3.5, -8.5, -1.5, 0.5, -8.5, 7, 0.5, -8.5, 7, 3.5, -8.5, -1.5, 3.5, -8, -1.5, 0.5, -8, 7, 0.5, -8, 7, 3.5, -8)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_ukaqx"]
points = PackedVector3Array(6.5, 3.5, -8, 6.5, 0.5, -8, 7, 0.5, -8, 7, 3.5, -8, 6.5, 3.5, 4.5, 6.5, 0.5, 4.5, 7, 0.5, 4.5, 7, 3.5, 4.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_upn5f"]
points = PackedVector3Array(-2, 3.5, 4, -2, 0.5, 4, 6.5, 0.5, 4, 6.5, 3.5, 4, -2, 3.5, 4.5, -2, 0.5, 4.5, 6.5, 0.5, 4.5, 6.5, 3.5, 4.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_odhsx"]
points = PackedVector3Array(1, 3, -5.5, 1, 0.5, -5.5, 1.5, 0.5, -5.5, 1.5, 3, -5.5, 1, 3, 1.5, 1, 0.5, 1.5, 1.5, 0.5, 1.5, 1.5, 3, 1.5)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_x1sy4"]
points = PackedVector3Array(-1.5, 3.5, -6.4, -1.5, 0.5, -6.4, 1, 0.5, -6.4, 1, 3.5, -6.4, -1.5, 0.5, -1, 1, 0.5, -1)

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" parent="." instance=ExtResource("1_db21n")]

[node name="Floor" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.25, 0)
mesh = SubResource("BoxMesh_gd0ev")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_oahyi")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -7.79714, 0.5, -2.66822)
mesh = SubResource("BoxMesh_kat8l")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D/StaticBody3D"]
shape = SubResource("BoxShape3D_2o4n6")

[node name="Box" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 1, -5)
mesh = SubResource("BoxMesh_xc4gq")

[node name="StaticBody3D" type="StaticBody3D" parent="Box"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Box/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_vp4dy")

[node name="Ramp" type="MeshInstance3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 5, 0, 0)
mesh = SubResource("PrismMesh_rutao")
skeleton = NodePath("../Box")

[node name="StaticBody3D" type="StaticBody3D" parent="Ramp"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ramp/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_j6kcl")

[node name="CharacterBody3D" parent="." instance=ExtResource("4_liofc")]

[node name="FuncGodotMap" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -12.5538)
script = ExtResource("5_1wico")
local_map_file = "res://trenchbroom/maps/_debug.map"
map_settings = ExtResource("6_q5elh")

[node name="entity_0_worldspawn" type="StaticBody3D" parent="FuncGodotMap"]

[node name="entity_0_mesh_instance" type="MeshInstance3D" parent="FuncGodotMap/entity_0_worldspawn"]
mesh = SubResource("ArrayMesh_vas6h")

[node name="entity_0_occluder_instance" type="OccluderInstance3D" parent="FuncGodotMap/entity_0_worldspawn"]
occluder = SubResource("ArrayOccluder3D_pnjjl")

[node name="entity_0_brush_0_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_furfo")

[node name="entity_0_brush_1_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_g3vux")

[node name="entity_0_brush_2_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_ppwhp")

[node name="entity_0_brush_3_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_xvm6x")

[node name="entity_0_brush_4_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_84und")

[node name="entity_0_brush_5_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_ukaqx")

[node name="entity_0_brush_6_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_upn5f")

[node name="entity_0_brush_7_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_odhsx")

[node name="entity_0_brush_8_collision_shape" type="CollisionShape3D" parent="FuncGodotMap/entity_0_worldspawn"]
shape = SubResource("ConvexPolygonShape3D_x1sy4")
